@import 'animate';
@import 'compass/css3/border-radius';
@import 'compass/css3/box-shadow';
@import 'compass/css3/box-sizing';
@import 'compass/css3/images';
@import 'compass/css3/user-interface';
@import 'inktank_colors';
@import 'bootstrap3_vars';

$itapp-background-color: $itdarkgray;
$itapp-card-color: $itlightgray;
$itapp-font-family: 'ApexSansMedium';
$itapp-standard-font-color: $itdarkgray;
$itapp-card-border-radius: 1px;
$itapp-card-box-shadow-color: #5e6a71;
$itapp-subtext-font-color: $itgray;
$itapp-card-title-font-color: $itdarkred;

body {
    background-color: $itapp-background-color;
    font-family: $itapp-font-family;
    font-style: normal;
}

$itapp-card-height: 240;
$second-row-height: 600px;
$third-row-height: 120px;

.pgmap {
    min-height: #{$itapp-card-height*2}px;
}
.pg-heatmap-svg {
    height: #{$itapp-card-height*1.75}px;
    border: 1px solid red;
}
.navbar {
    margin-bottom:0;
    min-height: 58px;
    @include background(linear-gradient(to bottom, darken($itdarkred, 20%), darken($itred, 40%)));
    @include border-radius(3px);
    @include box-shadow(0 2px 4px rgba(0, 0, 0, .2));
    border: 1px solid darken($itdarkred, 15%);
    width: 100%;
}

.navbar .navbar-nav > li > a {
	text-shadow: 0 1px 0 $itgray;
	color: $itlightgray;
        @include background(linear-gradient(to bottom, darken($itdarkred, 20%), darken($itred, 40%)));
	&:hover {
		color: darken($itlightgray, 15%);
	}
	&:active {
	}
}
.dropdown-menu {
	background-color: $itlightgray;
    span {
        display: inline-block;
        width: 20px;
        text-align: center;
        margin-right: 5px;
    }
}

.card {
    position: relative;
    color: $itapp-standard-font-color;
    background-color: $itapp-card-color;
    @include box-shadow(0 2px 4px rgba(0,0,0,.2));
    @include box-sizing(border-box);
    @include border-radius($itapp-card-border-radius);
    width: 100%;
    padding: 9px;
    margin-top: 16px;
    @include breakpoint(screen-xs) {
	min-width: 200px;
    }
    h1, h2, h3, h4, h5, h6 {
        font-family: ApexSansMedium;
    }
}

.custom-gutter {
    padding-left: 8px;
    padding-right: 8px;
}

.gauge {
    min-height: #{$itapp-card-height}px;
    text-align: left;
    line-height: 1.25;
}

$color-width: 5px;

$hr-width: auto;
hr.style-two {
    display: none;
    border: 0;
    margin: 0 0 0 0;
    height: 3px;
    width: 33%;
    right: 0;
    background: #ccc;
}
.card-title {
    color: $itdarkgray;
    text-transform: uppercase;
    font-family: ApexSansLight;
    font-size: 1.5em;
}
table.metrics tr td:first-child {
    text-align: right;
    color: $itapp-subtext-font-color;
}
.table.metrics td, .table.metrics th {
    line-height: 1em;
}
table.metrics td {
    width: auto;
}
table.metric td:last-child {
}
.table th, .table td {
    padding: 4px;
}
.table tbody td, .table thead th {
	text-align: right;
}
.table tbody td {
	font-family: ApexSansLight;
}
span.infotext {
    font-size: 25px;
    text-align: center;
    display: inline-block;
    margin: 10px auto auto 50px;
}
span.infotext-2 {
    position: absolute;
    right: 26px;
    bottom: 70px;
    display: inline-block;
    margin: 10px auto auto 4px;
    color: $itapp-subtext-font-color;
}
span.health-text {
    font-size: 45px;
    width: $hr-width;
    text-align: center;
    display: block;
    margin: 40px auto 0px auto;
}
span.mon-text {
    text-align: center;
    width: $hr-width;
    display: inline-block;
    margin: 5px auto auto auto;
    color: $itgray;
}
span.mon-text-2 {
    text-align: right;
    width: $hr-width;
    display: inline-block;
    margin: 10px auto auto 15px;
    color: #aaa;
}
span.subtext {
    position: absolute;
    display: inline-block;
    font-size: 0.9em;
    bottom: 10px;
    right: 8px;
}
.icon-target {
	padding: 2px;
}
.table tr:first-child > th, .table tr:first-child > td {
    border-top: 0px;
}
.usage-canvas {
    min-height: #{$itapp-card-height/2}px;
    max-width: #{$itapp-card-height - 30}px;
    box-sizing: border-box;
    padding: 0;
    margin: 45px auto 0 auto;
    @include breakpoint(screen-lg) {
    	min-height: #{$itapp-card-height/1.8}px;
    	max-width: #{$itapp-card-height}px;
	margin-left: 20px;
    }
    @include breakpoint(screen-sm) {
	display: block;
	position: absolute;
        min-height: #{($itapp-card-height/1.75)*1.3}px;
        max-width: #{$itapp-card-height*1.3}px;
	margin: 0;
//	right: 0;
	top: 20px;
    }
    @include breakpoint(screen-xs) {
	display: block;
	position: absolute;
        min-height: #{$itapp-card-height/2}px;
        max-width: #{$itapp-card-height - 30}px;
	margin: 0;
	top: 80px;
    }
}
.mytext {
    position: absolute;
    right: 20px;
    top: 35px;
    font-size: 3em;
    @include breakpoint(screen-xs) {
    top: 30px;
    }
}
@mixin textalert($color) {
       color: $color;
       opacity: 0.95;
}
.mon-state {
    margin-top: 40px;
}
.pg-state {
  margin-top: 40px;
}
.pg-count {
}
.pg-count-top {
  display: inline-block;
  margin-bottom: 5px;
}
.pg-count-bottom {
  font-size: 0.8em;
  text-transform: capitalize;
}
.osd-histogram {
}
.osd-histogram-svg {
    position: absolute;
    bottom: 15px;
    left: 45px;
    height: 140px;
    width: 120px;
    @include breakpoint(screen-lg) {
    	height: 180px;
    	width: 160px;
    }
    @include breakpoint(screen-md) {
    	//left: 30px;
    }
    @include breakpoint(screen-sm) {
    	height: 180px;
    	width: 160px;
    	bottom: 20px;
    	left: 80px;
    }
    @include breakpoint(screen-xs) {
    	left: 30px;
    	height: 140px;
    	width: 120px;
    }
    //border: 1px solid red;
}
.osd-lines {
    fill: none;
    stroke: $itdarkgray;
}
.osd-histogram-count {
    position: absolute;
    right: 20px;
    top: 35px;
    font-size: 3em;
    @include breakpoint(screen-md) {
        top: 35px;
        right: 20px;
    }
    @include breakpoint(screen-sm) {
        right: 30px;
    }
    @include breakpoint(screen-xs) {
        top: 30px;
    }
}
.osd-histogram-subtitle {
    position: absolute;
    top: 30px;
    right: 23px;
    @include breakpoint(screen-sm) {
	right: 33px;
    }
    @include breakpoint(screen-xs) {
        top: 28px;
    }
}
.osd-histogram-ok {
    fill: $itosdok;
}
.osd-histogram-warn {
    fill: $itosdwarn;
}
.osd-histogram-critical {
    fill: $itosdcritical;
}
.osd-count-text {
    font-size: 1em;
}
.warn {
       @include textalert(orange);
}
.fail {
       @include textalert(red);
}
.ok {
       @include textalert(green);
}
.notifications {
    min-height: $third-row-height;
    margin-bottom: 10px;
}
.container {
    position: relative;
}
$bc-item-width: 52;
$bc-height: 33;
$bc-line-width: 40;
$bc-width: $bc-height;
$bc-margin: 4;
.nav.navbar {
    border-bottom: 1px solid $itgray;
}
.inknav {
    @include user-select(none);	
    display: inline-block;
    max-width: #{(($bc-item-width *3) + ($bc-line-width)* 2) + 12}px;
    position: absolute;
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    top: 4px;
}
.bc-entry {
    margin: #{$bc-margin - 2}px;
    text-align: center;
    vertical-align: middle;
    display: inline-block;
    height: #{$bc-height}px;
    width: #{$bc-width}px;
    text-overflow: hidden;
    overflow: hidden;
    @include border-radius(100%);
    @include background(linear-gradient(top left, lighten($itgray, 30%), $itdarkgray));
    line-height: 1.9;
    color: $itlightgray;
    cursor: pointer;
}
.bc-entry:hover {
    @include background(linear-gradient(top left, $itdarkgray, lighten($itgray, 30%)));
}
.bc-entry:active {
    @include background(linear-gradient(top left, $itdarkgray, $itlightgray));
}
.bc-line {
    height: 30px;
    border-top: 2px solid $itgray;
    display: inline-block;
    margin: 0;
    padding: 0;
    width: #{$bc-line-width}px;
}
.bc-active {
    color: $itdarkgray;
    background: $itlightgray;
    cursor: default;
}
.bc-active:hover {
    background: $itlightgray;
}
.bc-circle {
    text-align: center;
    vertical-align: middle;
    display: inline-block;
    height: #{$bc-height+($bc-margin * 2)}px;
    width: #{$bc-width+ ($bc-margin * 2)}px;
    text-overflow: hidden;
    overflow: hidden;
    @include border-radius(100%);
    border: 2px solid $itgray;
    margin: 0px auto;
    padding: 0px;
    cursor: pointer;
}
.bc-title {
    color: $itlightgray;
    font-size: 8px;
    margin-top: 0;
}
.bc-title-one {
}
.bc-title-two {
}
.bc-title-three {
}
.bc-item {
    text-align: center;
    display: inline-block;
    max-width: #{$bc-item-width}px;
    min-width: #{$bc-item-width}px;
    margin: 0 auto;
    padding: 0;
}
@include animate-fadeIn($class: true);
@include animate-fadeOut($class: true);
@include animate-fadeOutUp($class: true);
@include animate-fadeInDown($class: true);
@include animate-fadeOutLeft($class: true);
@include animate-fadeInLeft($class: true);
@include animate-fadeOutRight($class: true);
@include animate-fadeInRight($class: true);

$timeFast: 0.125s;
$timeMed: 0.5s;
$timeSlow: 1s;
.fadeInStatusAnim {
    @include animation(fadeIn $timeFast ease);
}
.fadeOutAnim {
    @include animation(fadeOut $timeFast ease);
}
.fadeOutUpAnim {
    @include animation(fadeOutUp $timeMed ease);
}
.fadeInDownAnim {
    @include animation(fadeInDown $timeSlow ease);
}
@include keyframes(toWorkBench) {
    0% {
	    background-color: $itdarkgray;
    }
    100% {
	    background-color: $itlightgray;
    }
}
.toWorkBenchAnim {
    @include animation(toWorkBench 0.125s ease-in);
}
@include keyframes(toDashboard) {
    0% {
	    background-color: $itlightgray;
    }
    100% {
	    background-color: $itdarkgray;
    }
}
.toDashboardAnim {
    @include animation(toDashboard $timeFast ease-out);
}
@mixin animate-flipAwayY(
  $class      : $default-animation-class-mode,
  $keyframes  : $default-keyframes-output
) {
  $name: flipAwayY;
  @if $keyframes {
    @include keyframes($name) {
      0% {
        @include transform(perspective(400px) rotateY(0deg));
      }
      50% {
        @include transform(perspective(400px) rotateY(90deg));
	color: $itlightgray;
      }
      100% {
        @include transform(perspective(400px) rotateY(180deg));
	color: $itlightgray;
      }
    }
  }
  @include flip-class($name, $class);
}
@mixin animate-flipBackY(
  $class      : $default-animation-class-mode,
  $keyframes  : $default-keyframes-output
) {
  $name: flipBackY;
  @if $keyframes {
    @include keyframes($name) {
      0% {
        @include transform(perspective(400px) rotateY(180deg));
      }
      50% {
        @include transform(perspective(400px) rotateY(90deg));
      }
      100% {
        @include transform(perspective(400px) rotateY(0));
      }
    }
  }
  @include flip-class($name, $class);
}
@include animate-flipAwayY($class: true);
@include animate-flipBackY($class: true);
.card:hover {
//   @include animation(flipAwayY $timeMed ease-in);
}
